name: Deploy User Test Service

on:
  push:
    branches:
      - main
      - development
    paths:
      - 'user-test-service/**'
      - '.github/workflows/deploy-user-test-service.yml'
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: lthrecommendation
  PYTHON_VERSION: '3.9'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Only run if commit message contains [user-test] or files in user-test-service changed
    if: |
      contains(github.event.head_commit.message, '[user-test]') || 
      contains(github.event.head_commit.message, '[deploy-all]') ||
      github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r user-test-service/requirements.txt
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create deployment slot for user-test service (if not exists)
      run: |
        # Check if slot exists
        if ! az webapp deployment slot list --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group lthrecommendation_group --query "[?name=='usertest-dev']" | grep -q "usertest-dev"; then
          echo "Creating usertest-dev deployment slot..."
          az webapp deployment slot create \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group lthrecommendation_group \
            --slot usertest-dev
        else
          echo "Slot usertest-dev already exists"
        fi
    
    - name: Package user-test-service
      run: |
        cd user-test-service
        zip -r ../user-test-service.zip . -x "*.pyc" -x "__pycache__/*" -x ".env*"
    
    - name: Deploy to Azure Web App - User Test Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'usertest-dev'
        package: user-test-service.zip
    
    - name: Configure User Test Service App Settings
      run: |
        az webapp config appsettings set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --slot usertest-dev \
          --resource-group lthrecommendation_group \
          --settings \
            CLICKUP_API_KEY="${{ secrets.USER_TEST_CLICKUP_API_KEY }}" \
            CLICKUP_LIST_ID="${{ secrets.USER_TEST_CLICKUP_LIST_ID }}" \
            KEY_FEEDBACK_FIELD_ID="${{ secrets.USER_TEST_KEY_FEEDBACK_FIELD_ID }}" \
            EMAIL_FIELD_ID="${{ secrets.USER_TEST_EMAIL_FIELD_ID }}" \
            TYPEFORM_API_TOKEN="${{ secrets.USER_TEST_TYPEFORM_API_TOKEN }}" \
            USER_TEST_SERVICE_PORT="5001" \
            FLASK_APP="src/app.py" \
            PYTHONPATH="/home/site/wwwroot"
    
    - name: Configure startup command
      run: |
        az webapp config set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --slot usertest-dev \
          --resource-group lthrecommendation_group \
          --startup-file "cd /home/site/wwwroot && python src/app.py"
    
    - name: Restart the slot
      run: |
        az webapp restart \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --slot usertest-dev \
          --resource-group lthrecommendation_group
    
    - name: Verify deployment
      run: |
        echo "üîç Verifying user test service deployment..."
        sleep 30
        
        echo "‚úÖ User Test Service deployment complete!"
        echo "üåê Service URL: https://lthrecommendation-usertest-dev.azurewebsites.net"
        echo "üìù Typeform Webhook URL: https://lthrecommendation-usertest-dev.azurewebsites.net/survey"
        echo ""
        echo "‚ö†Ô∏è  Important: Configure this webhook URL in your Typeform settings"