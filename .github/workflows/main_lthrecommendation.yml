name: Build and deploy container app to Azure Web App - lthrecommendation

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: 'https://lthrecommendations.azurecr.io'
          username: ${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_88A5EB09FFD74A65809ED3D9CBE17E99 }}
          password: ${{ secrets.AZUREAPPSERVICE_CONTAINERPASSWORD_F3B8CEF230DF4AAD84209450F8DAD3D6 }}
      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: lthrecommendations.azurecr.io/${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_88A5EB09FFD74A65809ED3D9CBE17E99 }}/lthrecommendations:${{ github.sha }}
          file: ./docker/Dockerfile
          build-args: |
            APP_ENV=${{ startsWith(github.ref, 'refs/heads/development') && 'Development' || 'Production' }}            
            CLICKUP_API_KEY=${{ secrets.CLICKUP_API_KEY }}
            CLICKUP_LIST_ID=${{ secrets.CLICKUP_LIST_ID }}
            SCORES_FIELD_ID=${{ secrets.SCORES_FIELD_ID }}
            PLOT_FIELD_ID=${{ secrets.PLOT_FIELD_ID }}
            ANSWERS_FIELD_ID=${{ secrets.ANSWERS_FIELD_ID }}
            ROUTINES_FIELD_ID=${{ secrets.ROUTINES_FIELD_ID }}
            ACTIONPLAN_FIELD_ID=${{ secrets.ACTIONPLAN_FIELD_ID }}
            TYPEFORM_API_KEY=${{ secrets.TYPEFORM_API_KEY }}
            STRAPI_API_KEY=${{ secrets.STRAPI_API_KEY }}
            STRAPI_API_KEY_DEV=${{ secrets.STRAPI_API_KEY_DEV }}
            FORM_ID=${{ secrets.FORM_ID }}
            LINK_SUMMARY_TITLE_FIELD_ID=${{ secrets.LINK_SUMMARY_TITLE_FIELD_ID }}
            LINK_SUMMARY_SUMMARY_FIELD_ID=${{ secrets.LINK_SUMMARY_SUMMARY_FIELD_ID }}
            LINK_SUMMARY_OPENAI_API_KEY=${{ secrets.LINK_SUMMARY_OPENAI_API_KEY }}
            INTERNAL_API_KEY_DEV=${{ secrets.INTERNAL_API_KEY_DEV }}
            INTERNAL_API_KEY_STAGING=${{ secrets.INTERNAL_API_KEY_STAGING }}
            AZURE_BLOB_CONNECTION_STRING=${{ secrets.AZURE_BLOB_CONNECTION_STRING }}

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Production
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'lthrecommendation'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PRODUCTION }}
          images: 'lthrecommendations.azurecr.io/${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_88A5EB09FFD74A65809ED3D9CBE17E99 }}/lthrecommendations:${{ github.sha }}'

  deploy-development:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Dev Slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'lthrecommendation'
          slot-name: 'dev'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DEV }}
          images: 'lthrecommendations.azurecr.io/${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_88A5EB09FFD74A65809ED3D9CBE17E99 }}/lthrecommendations:${{ github.sha }}'
